"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4805],{5390:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(4848),n=s(8453);const i={},r="Databases",o={id:"The Backend Implementation/databases",title:"Databases",description:"architecture diagram",source:"@site/versioned_docs/version-2.1/The Backend Implementation/4-databases.md",sourceDirName:"The Backend Implementation",slug:"/The Backend Implementation/databases",permalink:"/docs/2.1/The Backend Implementation/databases",draft:!1,unlisted:!1,tags:[],version:"2.1",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"API Instances",permalink:"/docs/2.1/The Backend Implementation/api_Instances"},next:{title:"Docker And Kubernetes",permalink:"/docs/2.1/The Backend Implementation/docker_kubernetes"}},d={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Databases",id:"databases-1",level:2},{value:"Main Database",id:"main-database",level:3},{value:"File Storage",id:"file-storage",level:3},{value:"Configuration Database",id:"configuration-database",level:3}];function h(e){const a={a:"a",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"databases",children:"Databases"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"architecture diagram",src:s(4983).A+"",width:"1920",height:"754"})})}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(a.p,{children:"The database technologies utilized"})}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.a,{href:"#",children:"Databases"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.a,{href:"#databases-1",children:"Databases"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.a,{href:"#main-database",children:"Main Database"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.a,{href:"#file-storage",children:"File Storage"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.a,{href:"#configuration-database",children:"Configuration Database"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.h2,{id:"databases-1",children:"Databases"}),"\n",(0,t.jsxs)(a.p,{children:["For better ",(0,t.jsx)(a.strong,{children:"separation, maintainability, scalability and performance"}),", the persistence of data was divided into ",(0,t.jsx)(a.strong,{children:"three separate databases"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["This allows the better utilization of each database's ",(0,t.jsx)(a.strong,{children:"core strengths"})," as they are needed in the multitude of tasks that the ",(0,t.jsx)(a.strong,{children:"API Instances"})," are required to perform."]}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.h3,{id:"main-database",children:"Main Database"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"architecture diagram",src:s(1706).A+"",width:"2000",height:"600"})})}),"\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.strong,{children:"models"})," mentioned previously as well as most of the data processed are ",(0,t.jsx)(a.strong,{children:"saved in the Main Database"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["Due to the ",(0,t.jsx)(a.strong,{children:"volatile"})," and ",(0,t.jsx)(a.strong,{children:"highly customizable"})," nature of these models, a database that could easily be adapted to new model formats was necessary."]}),"\n",(0,t.jsxs)(a.p,{children:["This means that the typical SQL databases are ",(0,t.jsx)(a.strong,{children:"not adequate"})," for our type of data structures, so a ",(0,t.jsxs)(a.strong,{children:[(0,t.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/NoSQL",children:"NoSQL"})," database was chosen instead"]}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["Most NoSQL databases are much more recent than the SQL databases we are used to, and since all the components in this project must have certified ",(0,t.jsx)(a.strong,{children:"long term support"}),", the ",(0,t.jsxs)(a.strong,{children:[(0,t.jsx)(a.a,{href:"https://www.mongodb.com/",children:"MongoDB"})," database was chosen"]}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["MongoDB allows the ",(0,t.jsx)(a.strong,{children:"models to be changed without affecting the compatibility of old data models"}),", meaning that changes made to the database will still always allow for old data to be processed along with new data."]}),"\n",(0,t.jsxs)(a.p,{children:["Another key feature that drove our decision is the ability to easily convert a ",(0,t.jsx)(a.strong,{children:"mongoDB document into a JSON object"})," that could easily be natively worked on inside our python codebase, ",(0,t.jsx)(a.strong,{children:"without the need for complicated operations"})," such as joins, aggregations, etc..."]}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.h3,{id:"file-storage",children:"File Storage"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"architecture diagram",src:s(9861).A+"",width:"5000",height:"1451"})})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Storing large files"})," (ex: PDF files from dissertations or dissertation logos) would take a lot of ",(0,t.jsx)(a.strong,{children:"I/O throughput"})," away from the rest of the Main Database as well as use a lot of the machine's available ",(0,t.jsx)(a.strong,{children:"storage space"}),"."]}),"\n",(0,t.jsx)(a.p,{children:"This means that another way of storing large singular files had to be chosen."}),"\n",(0,t.jsxs)(a.p,{children:["For this, we used a ",(0,t.jsx)(a.strong,{children:"cloud storage system"})," that is included inside the machine's filesystem, which is then linked inside the necessary ",(0,t.jsx)(a.strong,{children:"docker volumes"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["This allows the asynchronous storage and retrieval of files ",(0,t.jsx)(a.strong,{children:"without impacting the Main Database's"})," throughput capacity or performance."]}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.h3,{id:"configuration-database",children:"Configuration Database"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"architecture diagram",src:s(3160).A+"",width:"2000",height:"622"})})}),"\n",(0,t.jsxs)(a.p,{children:["Since ",(0,t.jsx)(a.strong,{children:"there can be a lot of API Instances running at any given time"}),", changes made to the configuration must be made in such a way that all the instances must pick up the new changes as soon as they use them."]}),"\n",(0,t.jsxs)(a.p,{children:["So for ",(0,t.jsx)(a.strong,{children:'configurations and "magic numbers"'}),", we had to implement a place where all the instances could reach and get the necessary values."]}),"\n",(0,t.jsxs)(a.p,{children:["To do this, we chose to add a ",(0,t.jsxs)(a.strong,{children:[(0,t.jsx)(a.a,{href:"https://mariadb.org/",children:"MariaDB"})," implementation"]})," so that we did not have to worry about ",(0,t.jsx)(a.strong,{children:"concurrency"})," between all the instances and the data changes, as well as allowing all the configuration data to be ",(0,t.jsx)(a.strong,{children:"stored in the same, easy to edit file"}),"."]})]})}function c(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},9861:(e,a,s)=>{s.d(a,{A:()=>t});const t=s.p+"assets/images/cloud_storage-4212720f93544837d45b308fdbfd4760.png"},4983:(e,a,s)=>{s.d(a,{A:()=>t});const t=s.p+"assets/images/databases_nobg-c342066d1df821f8df75435785fcf218.png"},3160:(e,a,s)=>{s.d(a,{A:()=>t});const t=s.p+"assets/images/mariadb-64b7139dddfb50f1b7a0c9ceb853e184.png"},1706:(e,a,s)=>{s.d(a,{A:()=>t});const t=s.p+"assets/images/mongodb-28070dac02736bc56b3c9ece60da4b53.png"},8453:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>o});var t=s(6540);const n={},i=t.createContext(n);function r(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);